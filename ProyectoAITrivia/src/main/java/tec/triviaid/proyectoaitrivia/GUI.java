/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tec.triviaid.proyectoaitrivia;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import tec.triviaid.proyectoaitrivia.TriviaController.TriviaController;

import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import tec.triviaid.proyectoaitrivia.Estadisticas.TriviaTracker;
import tec.triviaid.proyectoaitrivia.FileController.FileOperations;
import tec.triviaid.proyectoaitrivia.GraphGeneration.PieChartGenerator;
import tec.triviaid.proyectoaitrivia.GraphGeneration.WordCloudGenerator;
import tec.triviaid.proyectoaitrivia.JsonController.JsonExtractor;
import tec.triviaid.proyectoaitrivia.TriviaController.Trivia;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        generatemenu = new javax.swing.JPanel();
        IntroLabel = new javax.swing.JLabel();
        nombreField = new javax.swing.JTextField();
        NombreLabel = new javax.swing.JLabel();
        temaField = new javax.swing.JTextField();
        TemaLabel = new javax.swing.JLabel();
        numPreguntasField = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tiempoxPreguntaField = new javax.swing.JComboBox<>();
        TiempoxPreguntaLabel = new javax.swing.JLabel();
        iIdiomaField = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        correoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        GeneratetoMenuButton = new javax.swing.JButton();
        menu = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TriviasList = new javax.swing.JList<>();
        TriviaSelectButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        triviaPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        option1button = new javax.swing.JButton();
        option2button = new javax.swing.JButton();
        option3button = new javax.swing.JButton();
        option4button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        preguntaField = new javax.swing.JTextArea();
        TimerLabel = new javax.swing.JLabel();
        fiftyfifty_button = new javax.swing.JButton();
        add_min_button = new javax.swing.JButton();
        statsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        statTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        comodinesLabel = new javax.swing.JLabel();
        tiempoxpreguntaLabel = new javax.swing.JLabel();
        feedbackPanel = new javax.swing.JPanel();
        endResetPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setLayout(new java.awt.CardLayout());

        generatemenu.setBackground(new java.awt.Color(232, 232, 232));
        generatemenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        generatemenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        IntroLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IntroLabel.setText("Bienvenido a Generador de Trivias!!!!!");
        IntroLabel.setToolTipText("");

        nombreField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nombreField.setToolTipText("");
        nombreField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreFieldActionPerformed(evt);
            }
        });

        NombreLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NombreLabel.setText("Nombre:");

        temaField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        temaField.setToolTipText("");

        TemaLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TemaLabel.setText("Tema de conocimiento general:");

        numPreguntasField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        numPreguntasField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6", "7", "8", "9", "10", "11", "12" }));
        

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Cantidad de Preguntas:");

        tiempoxPreguntaField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tiempoxPreguntaField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        

        TiempoxPreguntaLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TiempoxPreguntaLabel.setText("Tiempo por Pregunta (minutos):");

        iIdiomaField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        iIdiomaField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "Inglés", "Mandarín", "Francés" }));
        

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Idioma:");

        generateButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        generateButton.setText("Generar Trivia");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        correoField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Correo electrónico:");

        GeneratetoMenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        GeneratetoMenuButton.setText("Menu Principal");
        GeneratetoMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratetoMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout generatemenuLayout = new javax.swing.GroupLayout(generatemenu);
        generatemenu.setLayout(generatemenuLayout);
        generatemenuLayout.setHorizontalGroup(
            generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatemenuLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numPreguntasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(iIdiomaField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temaField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiempoxPreguntaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TemaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TiempoxPreguntaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generatemenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(IntroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191))
            .addGroup(generatemenuLayout.createSequentialGroup()
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generatemenuLayout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(generatemenuLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(GeneratetoMenuButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        generatemenuLayout.setVerticalGroup(
            generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatemenuLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(IntroLabel)
                .addGap(28, 28, 28)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreLabel)
                    .addComponent(TemaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(temaField))
                .addGap(27, 27, 27)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numPreguntasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TiempoxPreguntaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generatemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iIdiomaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiempoxPreguntaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GeneratetoMenuButton)
                .addGap(18, 18, 18))
        );

        background.add(generatemenu, "card2");

        menu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("MENU PRINCIPAL");

        TriviasList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TriviasList);

        TriviaSelectButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TriviaSelectButton.setText("Empezar Trivia");
        TriviaSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TriviaSelectButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Trivias Disponibles:");

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(286, 286, 286))
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 74, Short.MAX_VALUE))
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(TriviaSelectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel4)
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TriviaSelectButton)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        background.add(menu, "card3");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Trivia!!!");

        option1button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option1buttonActionPerformed(evt);
            }
        });

        option2button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option2buttonActionPerformed(evt);
            }
        });

        option3button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option3buttonActionPerformed(evt);
            }
        });

        option4button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option4buttonActionPerformed(evt);
            }
        });

        preguntaField.setEditable(false);
        preguntaField.setColumns(20);
        preguntaField.setRows(5);
        jScrollPane2.setViewportView(preguntaField);

        TimerLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        TimerLabel.setText("Tiempo: ");

        fiftyfifty_button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fiftyfifty_button.setText("50/50");
        fiftyfifty_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiftyfifty_buttonActionPerformed(evt);
            }
        });

        add_min_button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add_min_button.setText("Min +");
        add_min_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_min_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout triviaPanelLayout = new javax.swing.GroupLayout(triviaPanel);
        triviaPanel.setLayout(triviaPanelLayout);
        triviaPanelLayout.setHorizontalGroup(
            triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(triviaPanelLayout.createSequentialGroup()
                .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(triviaPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fiftyfifty_button)
                            .addComponent(add_min_button))
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(triviaPanelLayout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(TimerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, triviaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, triviaPanelLayout.createSequentialGroup()
                        .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(option4button, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(option1button, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(126, 126, 126)
                        .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(option2button, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(option3button, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, triviaPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(310, 310, 310))))
        );
        triviaPanelLayout.setVerticalGroup(
            triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(triviaPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(triviaPanelLayout.createSequentialGroup()
                        .addComponent(fiftyfifty_button)
                        .addGap(40, 40, 40)
                        .addComponent(add_min_button))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(TimerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(option1button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(option2button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(triviaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(option4button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(option3button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        background.add(triviaPanel, "card4");

        statTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pregunta", "Respuesta Correcta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(statTable);
        if (statTable.getColumnModel().getColumnCount() > 0) {
            statTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Resultados de la Trivia!!");

        comodinesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comodinesLabel.setText("Comodines Usados:");

        tiempoxpreguntaLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tiempoxpreguntaLabel.setText("Tiempo por pregunta: ");

        javax.swing.GroupLayout statsPanelLayout = new javax.swing.GroupLayout(statsPanel);
        statsPanel.setLayout(statsPanelLayout);
        statsPanelLayout.setHorizontalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comodinesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tiempoxpreguntaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
                .addContainerGap())
        );
        statsPanelLayout.setVerticalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addGroup(statsPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(comodinesLabel)
                        .addGap(55, 55, 55)
                        .addComponent(tiempoxpreguntaLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        background.add(statsPanel, "card5");

        javax.swing.GroupLayout feedbackPanelLayout = new javax.swing.GroupLayout(feedbackPanel);
        feedbackPanel.setLayout(feedbackPanelLayout);
        feedbackPanelLayout.setHorizontalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 733, Short.MAX_VALUE)
        );
        feedbackPanelLayout.setVerticalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 454, Short.MAX_VALUE)
        );

        background.add(feedbackPanel, "card6");

        javax.swing.GroupLayout endResetPanelLayout = new javax.swing.GroupLayout(endResetPanel);
        endResetPanel.setLayout(endResetPanelLayout);
        endResetPanelLayout.setHorizontalGroup(
            endResetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 733, Short.MAX_VALUE)
        );
        endResetPanelLayout.setVerticalGroup(
            endResetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 454, Short.MAX_VALUE)
        );

        background.add(endResetPanel, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreFieldActionPerformed

    

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
   
        //validate that all fields are filled
        if(nombreField.getText().isEmpty() || correoField.getText().isEmpty() || temaField.getText().isEmpty()){
            //show error message using a dialog box
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor llene todos los campos");

        }
        else{
            //set the data
            userdata.setNombre(nombreField.getText());
            userdata.setCorreo(correoField.getText());
            userdata.setCantidad_preguntas(Integer.parseInt(numPreguntasField.getSelectedItem().toString()));
            userdata.setIdioma(iIdiomaField.getSelectedItem().toString());
            userdata.setTema(temaField.getText());
            userdata.setTiempoxpregunta(Integer.parseInt(tiempoxPreguntaField.getSelectedItem().toString()));

            Trivia newTrivia = triviacontroller.generateTrivia(userdata.getIdioma(), userdata.getTema(), userdata.getCantidad_preguntas(), userdata.getTiempoxpregunta());
            
            //open pop window displaying that the trivia was generated, asking if the user wants to save it
            int result = javax.swing.JOptionPane.showConfirmDialog(this, "Trivia fue generada!!", "Quieres guardarla?", javax.swing.JOptionPane.YES_NO_OPTION);
            
            if(result == javax.swing.JOptionPane.YES_OPTION) {
                
                boolean serializar = triviacontroller.SerializeTrivia(newTrivia, userdata.getNombre(), userdata.getTema(), userdata.getIdioma(), userdata.getCantidad_preguntas());
                if (serializar) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Trivia guardada con éxito");
                }
                else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar la trivia");
                }
                
                generation_to_menu();
            } else {
                //return to the menu
                generation_to_menu();
                
            }

        }

      
        
    }//GEN-LAST:event_generateButtonActionPerformed

    private void TriviaSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TriviaSelectButtonActionPerformed
        //get the selected trivia
        menu_to_trivia();  
    }//GEN-LAST:event_TriviaSelectButtonActionPerformed

    private void GeneratetoMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratetoMenuButtonActionPerformed
        
         //validate that all fields are filled
         if(nombreField.getText().isEmpty() || correoField.getText().isEmpty()){
            //show error message using a dialog box
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor llene todos los campos");

        }
        else{
            //set the data
            userdata.setNombre(nombreField.getText());
            userdata.setCorreo(correoField.getText());
            
            generation_to_menu();

        }

    }//GEN-LAST:event_GeneratetoMenuButtonActionPerformed

    private void fiftyfifty_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiftyfifty_buttonActionPerformed
        fiftyfifty_button.setEnabled(false);
        tracker.useComodin();
        //randomly select two wrong answers
        for (int i = 1; i <= 4; i++) {
            if (jext.verifyAnswer(currentTrivia.getTriviaString(), "pregunta" + currentQuestionIndex, i) == 0) {
                if (i != 1 && i != 2) {
                    if (Math.random() < 0.5) {
                    if (i == 3) {
                        option3button.setEnabled(false);
                    } else {
                        option4button.setEnabled(false);
                    }
                    } else {
                    if (i == 3) {
                        option4button.setEnabled(false);
                    } else {
                        option3button.setEnabled(false);
                    }
                    }
                } else if (i == 1) {
                    option1button.setEnabled(false);
                } else if (i == 2) {
                    option2button.setEnabled(false);
                }
            }       
        
    }
        


    }//GEN-LAST:event_fiftyfifty_buttonActionPerformed

    private void add_min_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_min_buttonActionPerformed
        add_min_button.setEnabled(false);
        tracker.addTime();
        tracker.useComodin();
        

    }//GEN-LAST:event_add_min_buttonActionPerformed

    private void option1buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option1buttonActionPerformed
        // TODO add your handling code here:
        verifyAnswer(1);
    }//GEN-LAST:event_option1buttonActionPerformed

    private void option2buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option2buttonActionPerformed
        // TODO add your handling code here:
        verifyAnswer(2);
    }//GEN-LAST:event_option2buttonActionPerformed


    private void option3buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option3buttonActionPerformed
        // TODO add your handling code here:
        verifyAnswer(3);
    }//GEN-LAST:event_option3buttonActionPerformed


    private void option4buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option4buttonActionPerformed
        // TODO add your handling code here:
        verifyAnswer(4);
    }//GEN-LAST:event_option4buttonActionPerformed

    
    
    

    public void menu_to_trivia(){

        //get the selected trivia
        int index = TriviasList.getSelectedIndex();
        currentTrivia = trivias[index];

        //open the trivia window
        triviaPanel.setVisible(true);
        menu.setVisible(false);

        // Start the timer
        start_trivia();
        
    }

    public void generation_to_menu(){
        generatemenu.setVisible(false);
        menu.setVisible(true);

        trivias = triviacontroller.getTrivias();

        //fill the list with the trivia names

        String[] triviaNames = new String[trivias.length];

        for (int i = 0; i < trivias.length; i++) {
            Trivia trivia = trivias[i];
            triviaNames[i] = i+") "+trivia.toString();
        }

        TriviasList.setListData(triviaNames);
    }

    public void trivia_to_stats(){
        
        triviaPanel.setVisible(false);
        statsPanel.setVisible(true);
        
        
        List<String>  cats = Arrays.asList("Incorrectas", "Correctas");
        
        
        List<Integer> values = Arrays.asList(tracker.getIncorrectas(), tracker.getCorrectas());
        
        
        PieChartGenerator pieStats = new PieChartGenerator("Análisis de respuestas" ,cats, values);
        
        pieStats.setSize(600, 600);
        pieStats.setLocationRelativeTo(null);
        pieStats.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pieStats.setVisible(true);
        
        File imageFile = new File("Graficos/piechart.png");
        pieStats.saveChartAsImage(imageFile, 600, 600);
        
        comodinesLabel.setText("Comodines Usados: "+tracker.getComodines());
        tiempoxpreguntaLabel.setText("Tiempo por pregunta: "+tracker.getAverage() + " s");
    }
    
    
    public void stats_to_feedback(){
        
        
        statsPanel.setVisible(false);
        feedbackPanel.setVisible(true);
        try {

            FileOperations fop = new FileOperations("Feedback/feedback.json");
            
            
            List<String> current_words = fop.readComments();
            
            
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public void feedback_to_endReset(){
        
        
        statsPanel.setVisible(false);
        feedbackPanel.setVisible(true);
        try {

            FileOperations fop = new FileOperations("Feedback/feedback.json");
            
            
            List<String> current_words = fop.readComments();
            
            WordCloudGenerator wg = new WordCloudGenerator();
            wg.initUI(current_words);
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public void start_trivia(){
        
        //make all buttons enabled
        option1button.setEnabled(true);
        option2button.setEnabled(true);
        option3button.setEnabled(true);
        option4button.setEnabled(true);

        //make the 50/50 and add min buttons enabled
        fiftyfifty_button.setEnabled(true);
        add_min_button.setEnabled(true);

        //set the question
        set_question(currentQuestionIndex);

        //start tracking the trivia
        tracker = new TriviaTracker(currentTrivia.getCantidadPreguntas());

        //start the timer
        start_timer();
    }

    

    public void start_timer(){
         Runnable countdownTask = () -> {
            scheduler = Executors.newScheduledThreadPool(1);
            Runnable task = new Runnable() {
                int remainingSeconds = currentTrivia.getTiempoXPregunta() * 60;
                boolean set = false;
                
                @Override
                public void run() {
                    if(!set){
                        tracker.setRemainingSeconds(remainingSeconds);
                        set = true;
                    }
                    
                    remainingSeconds = tracker.getRemainingSeconds();
                    if (remainingSeconds > 0) {
                        int displayMinutes = remainingSeconds / 60;
                        int displaySeconds = remainingSeconds % 60;

                        TimerLabel.setText("Tiempo: " + displayMinutes + ":" + displaySeconds);
                        
                        remainingSeconds--;
                        tracker.setRemainingSeconds(remainingSeconds);
                    } else {
                        next_question();
                        scheduler.shutdown();
                    }
                }
            };

            scheduler.scheduleAtFixedRate(task, 0, 1, TimeUnit.SECONDS); // Schedule the task to run every second
        };

        // Run the countdownTask in a new thread
        Thread countdownThread = new Thread(countdownTask);
        countdownThread.start();
    }

    public void set_question(int index){
        System.out.println("Setting question "+index);
        String pregunta = jext.getQuestionEnunciado(currentTrivia.getTriviaString(),"pregunta"+index);
        preguntaField.setText(pregunta);

        List<String> opciones = jext.getQuestionRespuestasEnunciados(currentTrivia.getTriviaString(),"pregunta"+index);

        option1button.setText(opciones.get(0));
        option2button.setText(opciones.get(1));
        option3button.setText(opciones.get(2));
        option4button.setText(opciones.get(3));

        //enable all buttons
        option1button.setEnabled(true);
        option2button.setEnabled(true);
        option3button.setEnabled(true);
        option4button.setEnabled(true);

    }
    
    public void verifyAnswer(int index){

        int respuestaState = jext.verifyAnswer(currentTrivia.getTriviaString(), "pregunta" + currentQuestionIndex, index);
        tracker.add_average();
        if (respuestaState == 0){
            scheduler.shutdownNow();
            javax.swing.JOptionPane.showMessageDialog(this, "Respuesta Incorrecta!!!!");
            tracker.addIncorrecta(index);
            
        }else{
            scheduler.shutdownNow();
            javax.swing.JOptionPane.showMessageDialog(this, "Respuesta Correcta!!!");
            tracker.addCorrecta(index);
        }

        next_question();
    }

    public void next_question(){

        currentQuestionIndex++;
        
        if (currentQuestionIndex > currentTrivia.getCantidadPreguntas()){
            scheduler.shutdownNow();
            javax.swing.JOptionPane.showMessageDialog(this, "Trivia Terminada!!!");
            tracker.calculateAverage();
            this.trivia_to_stats();
            
        }else{
            set_question(currentQuestionIndex);
            start_timer();
        }

    }
    
    public UserData userdata;
    public TriviaController triviacontroller;
    public Trivia[] trivias;
    public Trivia currentTrivia;
    public JsonExtractor jext;
    public int currentQuestionIndex = 1;

    public TriviaTracker tracker;
    public ScheduledExecutorService scheduler;
    

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            GUI gui = new GUI();
            //make it not resizable
            gui.setResizable(false);
            gui.setVisible(true);
            gui.userdata = new UserData();
            gui.triviacontroller = new TriviaController();
            gui.jext = new JsonExtractor();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GeneratetoMenuButton;
    private javax.swing.JLabel IntroLabel;
    private javax.swing.JLabel NombreLabel;
    private javax.swing.JLabel TemaLabel;
    private javax.swing.JLabel TiempoxPreguntaLabel;
    private javax.swing.JLabel TimerLabel;
    private javax.swing.JButton TriviaSelectButton;
    private javax.swing.JList<String> TriviasList;
    private javax.swing.JButton add_min_button;
    private javax.swing.JPanel background;
    private javax.swing.JLabel comodinesLabel;
    public javax.swing.JTextField correoField;
    private javax.swing.JPanel endResetPanel;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JButton fiftyfifty_button;
    public javax.swing.JButton generateButton;
    public javax.swing.JPanel generatemenu;
    public javax.swing.JComboBox<String> iIdiomaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel menu;
    public javax.swing.JTextField nombreField;
    public javax.swing.JComboBox<String> numPreguntasField;
    private javax.swing.JButton option1button;
    private javax.swing.JButton option2button;
    private javax.swing.JButton option3button;
    private javax.swing.JButton option4button;
    private javax.swing.JTextArea preguntaField;
    private javax.swing.JTable statTable;
    private javax.swing.JPanel statsPanel;
    public javax.swing.JTextField temaField;
    public javax.swing.JComboBox<String> tiempoxPreguntaField;
    private javax.swing.JLabel tiempoxpreguntaLabel;
    private javax.swing.JPanel triviaPanel;
    // End of variables declaration//GEN-END:variables
}
